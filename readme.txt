###########################################################
 PROGRAM FOR COMPUTING THE MINIMUM AREA OF CONVEX POLYGON
 AUTHOR - GAUTAM D GHOSH
 DATE - 2/27/2019
###########################################################

AIM - GIVEN A LIST OF POINTS IN 2D SPACE, COMPUTE AREA OF SMALLEST CONVEX POLYGON

INPUT   -> LIST OF POINTS IN JSON FORMAT
EXAMPLE -> [ {"X":5.3,"Y":0.8},{"X":10.3,"Y":9.8} ]

OUTPUT  -> AREA OF POLYGON AS A FLOATING POINT DECIMAL NUMBER
EXAMPLE -> 5.1307645

CORE ALGORITHM   -> GRAHAM SCAN  
TIME COMPLEXITY  -> O(NlogN)
SPACE COMPLEXITY -> O(N)

DATA STUCTURES   -> LINKEDLIST, HASHSET, ARRAY

BRIEF OVERVIEW OF ALGORITHM
1. GIVEN SET OF 2D POINTS, FIND THE POINT WITH THE LOWEST Y-COORDINATE
2. SORT THE REMAINING POINTS AS PER POLAR ANGLE
3. CHECK OF COLLINEAR SET OF POINTS, IF FOUND KEEP THE FARTHEST POINT AND IGNORE THE POINT PRECEDING IT.
4. TRAVERSE THROUGH THE POLAR SORTED POINTS AND SELECT POINTS FOR CONVEX HULL BASED ON RIGHT TURN OR LEFT TURN. 
5. TRAVERSE THROUGH CONVEX HULL IN COUNTER-CLOCKWISE FASHION AND COMPUTE AREA.

REFERENCES:
COMPUTATIONAL GEOMETRY IN C, JOSEPH O'ROURKE

SUPPLIED:

CLASS   : Polygon.java, Point_2D.java
LIBRARY : JSON-simple-1.1
SCRIPT  : run ( PASSED AS POSITIONAL ARGUMENT TO EVALUATOR PROGRAM )

SHORT DESCRIPTION:
Polygon.java CONTAINS THE MAIN METHOD WHICH READS A STREAM OF INPUT AND STORES IT INTO A COLLECTION. A SET IS USED TO REMOVE POSSIBLE DUPLICATE POINTS 
AND ALSO FEATURES HAVE BEEN ADDED TO REMOVE ANY POSSIBLE NULL 2D POINT OBJECTS. THE POINTS ARE STORED UPTO 6TH DECIMAL PRECISON. GrahamScan() ROUTINE IS CALLED TO COMPUTE THE APPROXIMATE CONVEX HULL FROM THOSE POINTS. THE minimumArea() ROUTINE IS CALLED TO COMPUTE THE AREA FROM THE CONVEX HULL.

HOW TO RUN THE PROGRAM

FOR LINUX USERS:
1. GO TO THE SOURCE CODE FOLDER, YOU WILL ALL CLASSES AND 'run' SCRIPT 
2. ON TERMINAL TYPE sh task-smallest-polygon-evaluator ./run



